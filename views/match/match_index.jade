extend match

mixin picks_bans_row(picks_bans, team_int)
  each pick in picks_bans
    td(style="padding: 3px;")
      if pick.team === team_int
        - var hero_id = pick.hero_id
        - var is_pick = pick.is_pick
        - var hero = constants.heroes[hero_id]
        if hero
          span.img-text(class=pick.team ? "text-danger" : "text-success")
            img.img-sm(src=hero.img, title=hero.localized_name, style= (is_pick ? "" : "-webkit-filter: grayscale(100%); filter: grayscale(100%);"))
            div #{(is_pick ? "Pick" : "Ban")} (#{pick.order + 1})
        else
          = hero_id

block match_content
  .row
    .col-md-12
      +data_table({id:"index",summable:true, heading: "Overview"})
        each player, i in match.players
          +data_table_header(i, match)
            tr
              th: abbr(title=tooltips.hero_id) Hero
              th
              //th: abbr(title=tooltips.mmr) Rating
              th: abbr(title=tooltips.level) LV
              th: abbr(title=tooltips.kills) K
              th: abbr(title=tooltips.deaths) D
              th: abbr(title=tooltips.assists) A
              th: abbr(title=tooltips.last_hits) LH
              th: abbr(title=tooltips.denies) DN
              th: abbr(title=tooltips.total_gold) GOLD
              th: abbr(title=tooltips.gold_per_min) GPM
              th: abbr(title=tooltips.xp_per_min) XPM
              th: abbr(title=tooltips.hero_damage) HD
              th: abbr(title=tooltips.tower_damage) TD
              th: abbr(title=tooltips.hero_healing) HH
              th: abbr(title=tooltips.items) Items
          tr(class=player.isRadiant ? "radiant" : "dire")
            +hero_td(player)
            td
              //img.img-sm(src=player.avatar)
              if (player.last_login)
                img.user(src='/public/images/favicon-16x16.png', title="This user is registered!")
            td= player.level
            td= player.kills
            td.negative= player.deaths
            td= player.assists
            td= player.last_hits
            td= player.denies
            td.format= player.total_gold
            td= player.gold_per_min
            td= player.xp_per_min
            td.format= player.hero_damage
            td.format= player.tower_damage
            td.format= player.hero_healing
            td.text-left
              each val, index in player
                if (index.slice(0, 5)==="item_")
                  - var item = constants.items[constants.item_ids[val]]
                  if item
                    img.img-sm.item(src=item.img, title=constants.item_ids[val])
              if (player.hero_id === 80 && player.additional_units)
                br
                each val, index in player.additional_units[0]
                  if (index.slice(0, 5)==="item_")
                    - var item = constants.items[constants.item_ids[val]]                             
                    if item
                      img.img-sm.item(src=item.img, title=constants.item_ids[val])
  if match.picks_bans
    .row
      .col-md-12      
          h3.inline-header Picks/Bans
          #picks-bans.table-responsive.collapse.in
            table.table.table-hover
              tbody
                tr
                  +picks_bans_row(match.picks_bans, 0)
                tr
                  +picks_bans_row(match.picks_bans, 1)
                
  +ad("banner2")
  
  .row
    .col-md-8
      +data_table({id:"skills", heading: "Skill Builds"})
        each player, i in match.players
          +data_table_header(i, match)
            tr
              th Hero
              - for (var lv = 1; lv < 26; lv++)
                th(style="padding:0px")= lv
          tr
            +hero_td(player)
            each ability in player.ability_upgrades || {}
              td(style="padding:0px;")
                span.img-text
                  - var abilityData = constants.abilities[constants.ability_ids[ability.ability]]
                  if abilityData
                    img.img-sm.ability(src=abilityData.img, title=constants.ability_ids[ability.ability])
                  else
                    =ability.ability
                  //div #{moment().startOf('day').seconds(ability.time).format("mm:ss")}
                  //div #{(ability.time/60).toFixed(0)}'
                            
    .col-md-4
      h3 Buildings
      #map.mapContainer(data-radiant-win=match.radiant_win ? "1" : "0", data-tower-radiant=match.tower_status_radiant, data-tower-dire=match.tower_status_dire, data-barracks-radiant=match.barracks_status_radiant, data-barracks-dire=match.barracks_status_dire)
        img.map(src='//cdn.rawgit.com/kronusme/dota2-api/master/images/map/dota-map-6.82.jpg', alt="map")
  
append footer_assets
  script.
    buildMap();
